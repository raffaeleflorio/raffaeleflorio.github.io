<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>multithreading on raffaeleflorio ~/</title>
    <link>https://www.raffaeleflorio.com/tags/multithreading/</link>
    <description>Recent content in multithreading on raffaeleflorio ~/</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.raffaeleflorio.com/tags/multithreading/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Playwright on Steroids: Overcoming Limits With Object-Oriented Programming</title>
      <link>https://www.raffaeleflorio.com/post/playwright-on-steroids-overcoming-limits-with-oop/</link>
      <pubDate>Tue, 14 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://www.raffaeleflorio.com/post/playwright-on-steroids-overcoming-limits-with-oop/</guid>
      <description>Recently, I worked on a Playwright Java project. One of its characteristics is its single-thread nature. This means we have to use a Playwright instance in a single thread at a time. For the performance’s sake, we need to overcome this limit.
To get to the point, in the following demo, we’ll expose an HTTP endpoint that screenshots a web page given its URL. And we’ll build various solutions along with their benchmark when it’s useful to do so.</description>
    </item>
  </channel>
</rss>
